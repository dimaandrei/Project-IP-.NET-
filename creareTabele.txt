-- Generated by Oracle SQL Developer Data Modeler 21.1.0.092.1221
--   at:        2021-05-14 18:46:16 EEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE client (
    id_client             NUMBER NOT NULL,
    nume_client           VARCHAR2(50) NOT NULL,
    numar_telefon_client  CHAR(10) NOT NULL,
    tip_plata             VARCHAR2(10) NOT NULL,
    adresa_mail_client    VARCHAR2(45)
);

ALTER TABLE client
    ADD CONSTRAINT nume_client CHECK ( REGEXP_LIKE ( nume_client,
                                                     '^[A-Za-z ]+$' )
                                       AND length(nume_client) > 4 );

ALTER TABLE client
    ADD CONSTRAINT numar_tlf_clinet_ck CHECK ( REGEXP_LIKE ( numar_telefon_client,
                                                             '^[0-9]+$' ) AND length (numar_telefon_client) = 10);

ALTER TABLE client
    ADD CONSTRAINT tip_plata CHECK ( tip_plata IN ( 'card', 'cash' ) );

ALTER TABLE client
    ADD CONSTRAINT adresa_mail_client_ck CHECK ( REGEXP_LIKE ( adresa_mail_client,
                                                               '[a-z0-9._%-]+@[a-z0-9._%-]+\.[a-z]{2,4}' ) );

ALTER TABLE client ADD CONSTRAINT client_pk PRIMARY KEY ( id_client );

CREATE TABLE factura (
    nr_factura          NUMBER NOT NULL,
    tip_persoana        VARCHAR2(10) NOT NULL,
    serie_sasiu         VARCHAR2(25) NOT NULL,
    cost                NUMBER NOT NULL,
    data_achizitionare  DATE NOT NULL,
    id_client           NUMBER NOT NULL,
    model_masina        VARCHAR2(15) NOT NULL
);

ALTER TABLE factura
    ADD CONSTRAINT tip_persoana_ck CHECK ( tip_persoana IN ( 'fizica', 'juridica' ) );

ALTER TABLE factura
    ADD CONSTRAINT serie_sasiu_ck CHECK ( REGEXP_LIKE ( serie_sasiu,
                                                        '^[A-Za-z0-9]+$' )
                                          AND length(serie_sasiu) > 14 );

ALTER TABLE factura
    ADD CONSTRAINT cost_ck CHECK ( cost BETWEEN 7000 AND 500000 );

ALTER TABLE factura ADD CONSTRAINT factura_pk PRIMARY KEY ( nr_factura,
                                                            model_masina );

ALTER TABLE factura ADD CONSTRAINT serie_sasiu_un UNIQUE ( serie_sasiu );

CREATE TABLE model_client (
    model_masina  VARCHAR2(15) NOT NULL,
    id_client     NUMBER NOT NULL
);

ALTER TABLE model_client ADD CONSTRAINT model_client_pk PRIMARY KEY ( model_masina,
                                                                      id_client );

CREATE TABLE model_masina (
    model            VARCHAR2(15) NOT NULL,
    tip_buget        VARCHAR2(10) NOT NULL,
    tip_combustibil  VARCHAR2(8) NOT NULL,
    cai_putere       NUMBER NOT NULL,
    transmisie       VARCHAR2(8) NOT NULL,
    interior         VARCHAR2(6) NOT NULL,
    id_producator    NUMBER NOT NULL
);

ALTER TABLE model_masina
    ADD CONSTRAINT model_ck CHECK ( REGEXP_LIKE ( model,
                                                  '^[A-Za-z0-9 -]+$' )
                                    AND length(model) > 3 );

ALTER TABLE model_masina
    ADD CONSTRAINT tip_buget_ck CHECK ( tip_buget IN ( 'high', 'low', 'medium' ) );

ALTER TABLE model_masina
    ADD CONSTRAINT tip_combustibil_ck CHECK ( tip_combustibil IN ( 'benzina', 'diesel', 'electric', 'gpl', 'hibrid' ) );

ALTER TABLE model_masina
    ADD CONSTRAINT cai_putere_ck CHECK ( cai_putere BETWEEN 50 AND 750 );

ALTER TABLE model_masina
    ADD CONSTRAINT transmisie_ck CHECK ( transmisie IN ( 'automata', 'manuala' ) );

ALTER TABLE model_masina
    ADD CONSTRAINT interior_ck CHECK ( interior IN ( 'combo', 'piele', 'textil' ) );

ALTER TABLE model_masina ADD CONSTRAINT model_masina_pk PRIMARY KEY ( model );

CREATE TABLE producator (
    id_producator  NUMBER NOT NULL,
    nume_marca     VARCHAR2(20) NOT NULL,
    tara           VARCHAR2(20) NOT NULL,
    grup_auto      VARCHAR2(20) NOT NULL,
    numar_telefon  CHAR(10) NOT NULL,
    adresa_mail    VARCHAR2(45) NOT NULL
);

ALTER TABLE producator
    ADD CONSTRAINT nume_marca_ck CHECK ( REGEXP_LIKE ( nume_marca,
                                                       '^[A-Za-z0-9 ]+$' )
                                         AND length(nume_marca) > 2 );

ALTER TABLE producator
    ADD CONSTRAINT tara_ck CHECK ( REGEXP_LIKE ( tara,
                                                 '^[A-Za-z ]+$' )
                                   AND length(tara) > 2 );

ALTER TABLE producator
    ADD CONSTRAINT grup_auto_ck CHECK ( REGEXP_LIKE ( grup_auto,
                                                      '^[A-Za-z0-9 ]+$' )
                                        AND length(grup_auto) > 2 );

ALTER TABLE producator
    ADD CONSTRAINT numar_telefon_ck CHECK ( REGEXP_LIKE ( numar_telefon,
                                                          '^[0-9]+$' ) AND length(numar_telefon) = 10 );

ALTER TABLE producator
    ADD CONSTRAINT adresa_mail_ck CHECK ( REGEXP_LIKE ( adresa_mail,
                                                        '[a-z0-9._%-]+@[a-z0-9._%-]+\.[a-z]{2,4}' ) );

ALTER TABLE producator ADD CONSTRAINT producator_pk PRIMARY KEY ( id_producator );

ALTER TABLE factura
    ADD CONSTRAINT factura_client_fk FOREIGN KEY ( id_client )
        REFERENCES client ( id_client );

ALTER TABLE factura
    ADD CONSTRAINT factura_model_masina_fk FOREIGN KEY ( model_masina )
        REFERENCES model_masina ( model );

ALTER TABLE model_client
    ADD CONSTRAINT model_client_client_fk FOREIGN KEY ( id_client )
        REFERENCES client ( id_client );

ALTER TABLE model_client
    ADD CONSTRAINT model_client_model_masina_fk FOREIGN KEY ( model_masina )
        REFERENCES model_masina ( model );

ALTER TABLE model_masina
    ADD CONSTRAINT model_masina_producator_fk FOREIGN KEY ( id_producator )
        REFERENCES producator ( id_producator );

CREATE SEQUENCE client_id_client_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER client_id_client_trg BEFORE
    INSERT ON client
    FOR EACH ROW
    WHEN ( new.id_client IS NULL )
BEGIN
    :new.id_client := client_id_client_seq.nextval;
END;
/

CREATE SEQUENCE factura_nr_factura_seq START WITH 1000 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER factura_nr_factura_trg BEFORE
    INSERT ON factura
    FOR EACH ROW
    WHEN ( new.nr_factura IS NULL )
BEGIN
    :new.nr_factura := factura_nr_factura_seq.nextval;
END;
/

CREATE SEQUENCE producator_id_producator_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER producator_id_producator_trg BEFORE
    INSERT ON producator
    FOR EACH ROW
    WHEN ( new.id_producator IS NULL )
BEGIN
    :new.id_producator := producator_id_producator_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             5
-- CREATE INDEX                             0
-- ALTER TABLE                             29
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           2
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          3
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
